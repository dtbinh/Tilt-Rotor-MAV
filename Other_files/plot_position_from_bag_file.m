%% plot_position_error:
clear all;
close all;
bag = rosbag('/home/luca/git/Master_Thesis/bag/n=6_Flip_beta0.bag');
bag_odom = select(bag, 'Topic', '/optimal_drone_n6/odometry_sensor1/pose');
Odomx = timeseries(bag_odom, 'Position.X');
Odomy = timeseries(bag_odom, 'Position.Y');
Odomz = timeseries(bag_odom, 'Position.Z');
Odom_time = Odomx.Time;
Odomx =  Odomx.Data;
Odomy =  Odomy.Data;
Odomz =  Odomz.Data;
bag_com = select(bag, 'Topic', '/optimal_drone_n6/command/trajectory');
offset = bag_com.StartTime;
n = 275;
time_steps = 0.1;
time = zeros(n,1);
x = zeros(n,1);
y = zeros(n,1);
z = zeros(n,1);
yaw = zeros(n,1);
pitch = zeros(n,1);
roll = zeros(n,1);
for i = 1:51
    time(i) = i*0.1+offset;
    z(i) = 0.336;
end
for i = 52:67
    time(i) = i*0.1+offset;
    z(i) = 0.336 +0.04*(i-51);
end
for i = 68:88
    time(i) = i*0.1+offset;
    z(i) = 1;
end
for i =89:187
    time(i) = i*0.1+offset;
    z(i) = 1;
    pitch(i)= 3.636*(i-88);
end
for i =187:207
    time(i) = i*0.1+offset;
    z(i) = 1;
    pitch(i)= 360;
end
for i =208:224
    time(i) = i*0.1+offset;
    z(i) = 1 -0.04*(i-207);
    pitch(i)= 360;
end
for i =208:n
    time(i) = i*0.1+offset;
    z(i) = 0.336;
    pitch(i)= 360;
end
i0 = find(Odom_time<10);
iend = find(Odom_time>32);
Odom_time([i0; iend]) = [];
Odomx([i0; iend]) = [];
Odomy([i0; iend]) = [];
Odomz([i0; iend]) = [];
i0 = find(time<10);
iend = find(time>32);
time([i0; iend]) = [];
x([i0; iend]) = [];
y([i0; iend]) = [];
z([i0; iend]) = [];
yaw([i0; iend]) = [];
pitch([i0; iend]) = [];
roll([i0; iend]) = [];
yaw = deg2rad(yaw);
pitch = deg2rad(pitch);
roll = deg2rad(roll);
X_err = Odomx;
Y_err = Odomy;
Z_err = Odomz;


set(0,'defaulttextinterpreter','latex');
figure('Units', 'pixels', ...
    'Position', [100 100 800 600]);
hold on;

Xodom  = line(Odom_time, X_err);
Yodom   = line(Odom_time, Y_err);
Zodom = line (Odom_time, Z_err);
set(Xodom                        , ...
 'LineWidth'       , 1                  , ... 
 'Color'           , [0 0 .7]    );

set(Yodom                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [.7 0 0]  );

set(Zodom                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [0 .7 .7]  );
X  = line(time, x);
Y   = line(time, y);
Z = line (time, z);
set(X                        , ...
 'LineWidth'       , 1                  , ... 
 'Color'           , [0 0 1]    );

set(Y                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [1 0 0]  );

set(Z                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [0 1 1]  );
XLabel = xlabel('Time [s]');
YLabel = ylabel('Position error [m]'); 
Title = title('Position error while pitch flip');
Legend = legend( ...
  [Xodom,Yodom, Zodom, X, Y, Z], ...
  'P_{real,x}'       , ...
  'P_{real,y}'        , ...
  'P_{real,z}'      , ...
  'P_{des,x}'       , ...
  'P_{des,y}'        , ...
  'P_{des,z}'      , ...
  'location', 'NorthEast' );
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.3 .3 .3], ...
  'YColor'      , [.3 .3 .3], ...
  'YTick'       , -0.1:0.1:1, ...
  'LineWidth'   , 1         );
set([XLabel, YLabel, Legend], ...
    'FontName'   , 'Modern No. 20' , ...
    'FontWeight' , 'normal'      );
set(Title, ...
    'FontName'   , 'Modern No. 20' , ...
    'FontWeight' , 'bold'      );
set([Legend, gca]             , ...
    'FontSize'   , 20        );
set([XLabel, YLabel]  , ...
    'FontSize'   , 20          );
set( Title                    , ...
    'FontSize'   , 30         , ...
    'FontWeight' , 'normal'   );

%% plot orientation tracking:

Odomx = timeseries(bag_odom, 'Orientation.X');
Odomy = timeseries(bag_odom, 'Orientation.Y');
Odomz = timeseries(bag_odom, 'Orientation.Z');
Odomw = timeseries(bag_odom, 'Orientation.W');
Odom_time = Odomx.Time;
Odomx =  Odomx.Data;
Odomy =  Odomy.Data;
Odomz =  Odomz.Data;
Odomw =  Odomw.Data;

i0 = find(Odom_time<10);
iend = find(Odom_time>32);
Odom_time([i0; iend]) = [];
Odomx([i0; iend]) = [];
Odomy([i0; iend]) = [];
Odomz([i0; iend]) = [];
Odomw([i0; iend]) = [];
[Odom_yaw,Odom_pitch,Odom_roll] = quat2angle([Odomw Odomx Odomy Odomz], 'ZXY');
Odom_roll(1035:end) = Odom_roll(1035:end) + 2*pi;

% [eul] = quat2eul([Odomw Odomx Odomy Odomz], 'ZYZ');
% Odom_yaw = eul(:,1);
% Odom_pitch = eul(:,2);
% Odom_roll = eul(:,3);
% mod(Odom_yaw+3*pi, 2*pi);
% Odom_yaw(47:492) = Odom_yaw(47:492) - 2*pi;

YAW = Odom_yaw;
PITCH = Odom_roll;
ROLL = Odom_pitch;
 
set(0,'defaulttextinterpreter','latex');
figure('Units', 'pixels', ...
    'Position', [100 100 800 600]);
hold on;

YAW  = line(Odom_time, YAW);
PITCH   = line(Odom_time, PITCH);
ROLL = line (Odom_time, ROLL);

yaw = line(time, yaw);
pitch   = line(time, pitch);
roll = line (time, roll);
set(YAW                        , ...
 'LineWidth'       , 1                  , ... 
 'Color'           , [0 0 .4]    );

set(PITCH                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [.4 0 0]  );

set(ROLL                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [0 .4 .4]  );

set(yaw                        , ...
 'LineWidth'       , 1                  , ... 
 'Color'           , [0 0 1]    );

set(pitch                          , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [1 0 0]  );

set(roll                         , ...
  'LineWidth'       , 1                  , ...
  'Color'           , [0 1 1]  );

XLabel = xlabel('Time [s]');
YLabel = ylabel('Orientation [rad]'); 
Title = title('Orientation tracking (pitch flip)');
Legend = legend( ...
  [YAW,PITCH, ROLL, yaw, pitch, roll], ...
  '\phi_{real}'       , ...
  '\theta_{real}'        , ...
  '\psi_{real}'          , ...
  '\phi_{des}'       , ...
  '\theta_{des}'        , ...
  '\psi_{des}'          , ...
  'location', 'NorthEast' );
set(gca, ...
  'Box'         , 'off'     , ...
  'TickDir'     , 'out'     , ...
  'TickLength'  , [.02 .02] , ...
  'XMinorTick'  , 'on'      , ...
  'YMinorTick'  , 'on'      , ...
  'YGrid'       , 'on'      , ...
  'XColor'      , [.3 .3 .3], ...
  'YColor'      , [.3 .3 .3], ...
  'LineWidth'   , 1         );
set([XLabel, YLabel, Legend], ...
    'FontName'   , 'Modern No. 20' , ...
    'FontWeight' , 'normal'      );
set(Title, ...
    'FontName'   , 'Modern No. 20' , ...
    'FontWeight' , 'bold'      );
set([Legend, gca]             , ...
    'FontSize'   , 20        );
set([XLabel, YLabel]  , ...
    'FontSize'   , 20          );
set( Title                    , ...
    'FontSize'   , 30         , ...
    'FontWeight' , 'normal'   );